node controller(flame: bool; sec: bool) 
    returns (gas, spark: bool)
    (*timestamp keeps track of time for which gas is true without flame*)
var last timestamp: int = 1;
    last s: int;
let
    automaton 
        state Start
            (*initial start reset state for controller where no actuation happens*)
            do 
                gas = false;
                spark = false;
                s = 1;
            unless(flame = true) then Burningnormal
                | (flame = false) then Gasaccumulate
        state Burningnormal
            (*normal burning state, the flame is on, so keep gas on, don't produce sparks since the
              flame is already present, and reset timestamp*)
            do
                gas = true;
                spark = false;
                timestamp = 1;
                s = 2;
            (*if flame extinguishes then change state*)
            until(flame = false) then Gasaccumulate 
        state Gasaccumulate
            (*gas accumulation state, gas is filling up, don't spark, keep track of time
              for which the gas is on by incrementing timestamp*)
            do 
                timestamp = 1 -> last timestamp + 1;
                gas = true;
                spark = false;
                s = 3;
            (*if waited for 15 seconds go to spark the gas*)
            until(timestamp >= 15) then Sparkflame
            (*if for some reason, flame turns on (unlikely however as spark is false) go to burning normal*)
            unless(flame = true) then Burningnormal
        state Sparkflame
            (*sparking state, keep gas on, and increment timestamp as well, keep sparking until there is a flame*)
            do
                spark = true;
                timestamp = last timestamp + 1;
                gas = true;
                s = 4;
            (*if flame is on, then shift to normal burning*)
            until(flame = true) then Burningnormal
            (*make a strong check whether gas has been on for more than 60s, if so immediately go to dissipate emergency state
              without any sparks to avoid explosion*)
            unless(last timestamp >= 60) then Dissipate
        state Dissipate
            (*emergency state, switch off gas and wait for 120s for gas to dissipate to make no explosion, then switch to gas accumulate*)
            var cooldown_timer: int;
            do
                gas = false;
                spark = false;
                cooldown_timer = 1 -> pre(cooldown_timer) + 1;
                s = 5;
            (*if 120 seconds have elapsed, now proceed to accumulate gas*)
            until(cooldown_timer >= 120) then Gasaccumulate
            (*if for some reason, flame turns on (unlikely however as spark is false and also it will explode if flame goes on) go to burning normal*)
            unless(flame = true) then Burningnormal
    end
tel